  A design paradigm that our project 3 can represent is a service oriented design. For a service oriented design is where a service, or services, is provided to other components by application components. For our project, the front end of the program will provide a request to the back end. The back end then takes that request, and then gives it to the components that would be able to handle the service and send a result back to the front end. For the consumer, it is a black box because they donâ€™t need to know what is going on in the inner workings of the program, just as long as they get a result. It is self-contained and represents an activity with a specified outcome. 
	Another design paradigm utilized by our project 3 is a component oriented design. Component oriented design defines the interfaces, algorithms, data structures, and communication methods for each individual component constituting the overall architecture. These components can be considered as basic building blocks for our project. Our project has a hierarchy of components. At a very high level, our project has a front end, a backend, and an adapter that communicates between the previous. Each of these components then has sub components. For example, the backend has one sub component that receives and filters data and another that takes in the filtered data and processes it. A third component then repackages the result and feeds it to an adapter component that translates it and presents it to the front end. Using a component oriented design such as this has several outstanding advantages. Each component is composed of functions that are modular, portable, replaceable, and reusable. This means that specific functions can be moved around, replaced, and refitted for other purposes without necessitating redesigning the entire component or project architecture.
